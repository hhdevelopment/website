"use strict";(self.webpackChunksoftwarity=self.webpackChunksoftwarity||[]).push([[9265],{7970:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var s=i(5893),r=i(1151);const o={slug:"design",title:"Design Principles",authors:"fachache",tags:[]},d=void 0,c={id:"pres/design",title:"Design Principles",description:"ARCHWAY is built on proven technologies.",source:"@site/docs/pres/design.md",sourceDirName:"pres",slug:"/pres/design",permalink:"/pres/design",draft:!1,unlisted:!1,editUrl:"https://github.com/softwarity/website/tree/main/docs/pres/design.md",tags:[],version:"current",frontMatter:{slug:"design",title:"Design Principles",authors:"fachache",tags:[]},sidebar:"presSidebar",previous:{title:"User Information",permalink:"/pres/concepts/users-infos"}},t={},a=[{value:"<code>Back-end</code>",id:"back-end",level:2},{value:"<code>Front-end</code>",id:"front-end",level:2},{value:"<code>Database</code>",id:"database",level:2}];function l(e){const n={admonition:"admonition",code:"code",h2:"h2",p:"p",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ARCHWAY"})," is built on proven technologies."]})}),"\n",(0,s.jsx)(n.h2,{id:"back-end",children:(0,s.jsx)(n.code,{children:"Back-end"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"back-end"})," relies on the ",(0,s.jsx)(n.code,{children:"Spring"})," ecosystem, particularly ",(0,s.jsx)(n.code,{children:"Spring Cloud Gateway"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Spring Cloud Gateway"})," is a dynamic ",(0,s.jsx)(n.code,{children:"API gateway"})," for microservices.\nIt is built on ",(0,s.jsx)(n.code,{children:"Spring Framework"})," and ",(0,s.jsx)(n.code,{children:"Spring Boot"}),", providing an easy way to create ",(0,s.jsx)(n.code,{children:"API"})," routing.\n",(0,s.jsx)(n.code,{children:"Spring Cloud Gateway"})," is often used in microservices-based architectures to efficiently manage requests between different services."]}),"\n",(0,s.jsx)(n.h2,{id:"front-end",children:(0,s.jsx)(n.code,{children:"Front-end"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"front-end"})," relies on the ",(0,s.jsx)(n.code,{children:"Angular"})," ecosystem.\n",(0,s.jsx)(n.code,{children:"Angular"})," and ",(0,s.jsx)(n.code,{children:"Material Angular"})," are primarily used in the user interface."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Angular"})," is a front-end development framework based on TypeScript, developed and maintained by ",(0,s.jsx)(n.code,{children:"Google"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Angular Material"})," is a ",(0,s.jsx)(n.code,{children:"UI"})," component library for ",(0,s.jsx)(n.code,{children:"Angular"}),", following the principles of ",(0,s.jsx)(n.code,{children:"Google"}),"'s ",(0,s.jsx)(n.code,{children:"Material Design"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"database",children:(0,s.jsx)(n.code,{children:"Database"})}),"\n",(0,s.jsxs)(n.p,{children:["For the database, we have chosen ",(0,s.jsx)(n.code,{children:"MongoDB"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"MongoDB"})," is a document-oriented ",(0,s.jsx)(n.code,{children:"NoSQL"})," database, very popular for its flexibility and performance."]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>d});var s=i(7294);const r={},o=s.createContext(r);function d(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);